spring:
  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379
      password:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: test-client-id
            client-secret: test-client-secret
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - openid
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  autoconfigure:
    exclude:
      - org.springframework.ai.vectorstore.pgvector.autoconfigure.PgVectorStoreAutoConfiguration

jwt:
  access-token-secret: test-access-token-secret-key-for-testing-purposes-only
  refresh-token-secret: test-refresh-token-secret-key-for-testing-purposes-only
  access-token-expiration: 3600000 # 1 hour in milliseconds
  refresh-token-expiration: 86400000 # 1 day in milliseconds

cors:
  allowed-origins: http://localhost:3000

app:
  oauth2:
    redirect-uri: http://localhost:3000/oauth/callback
    register: http://localhost:3000/register
    access: http://localhost:3000/access
