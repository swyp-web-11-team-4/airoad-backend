plugins {
    id 'java'
    id 'plugin.coverage'
    id 'plugin.spotless'
    id 'plugin.sonar'

    alias(libs.plugins.kotlin)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
}

allprojects {
    group = 'com.swygbro'
    description = 'airoad-backend'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation libs.spring.boot.starter.web
    implementation libs.spring.boot.starter.data.jpa
    implementation libs.spring.boot.openapi.starter.webmvc.ui
    implementation libs.spring.boot.starter.websocket
    implementation libs.spring.boot.starter.actuator
    implementation libs.spring.boot.starter.data.redis

    // TODO: 사용자 인증 관련 개발 시 주석 해제 후 개발 진행
//    implementation libs.spring.boot.starter.security
//    implementation libs.spring.boot.starter.oauth2.client

    // Spring AI
    implementation platform(libs.spring.ai.bom)
    implementation libs.spring.ai.openai
    implementation libs.spring.ai.advisors.vector.store
    implementation libs.spring.ai.chat.memory.repository.jdbc

    // Hibernate
    implementation libs.hibernate.spatial

    // springdoc BOM으로 내부 버전 정렬
    implementation(platform("org.springdoc:springdoc-openapi-bom:2.8.13"))
    implementation(libs.spring.boot.openapi.starter.webmvc.ui)

    // Swagger
    implementation(libs.swagger.annotations.jakarta)
    implementation(libs.swagger.core.jakarta)
    implementation(libs.swagger.models.jakarta)

    // Redis (Lettuce)
    implementation libs.lettuce.core

    // Lombok
    compileOnly libs.lombok
    annotationProcessor libs.lombok

    // Development
    developmentOnly libs.spring.boot.starter.devtools

    // Database
    runtimeOnly libs.postgresql

    // Test
    testImplementation libs.spring.boot.starter.test
    testRuntimeOnly libs.h2
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
}
configurations.configureEach {
    exclude(group: "io.swagger.core.v3", module: "swagger-annotations") // javax 라인 차단
    exclude(group: "io.swagger.core.v3", module: "swagger-core")
    exclude(group: "io.swagger.core.v3", module: "swagger-models")
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

tasks.named("check") {
    dependsOn(tasks.named("jacocoTestCoverageVerification"))
    dependsOn(tasks.named("spotlessCheck"))

    doLast {
        print("커버리지 및 포맷팅 검사가 완료되었습니다:)")
    }
}
