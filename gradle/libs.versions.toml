[versions]
# Kotlin
kotlin = "2.0.21"

# Spring
spring-boot = "3.5.6"
spring-dependency-management = "1.1.7"
spring-doc = "2.8.13"
spring-ai-bom = "1.0.0"

# Swagger
swagger-core = "2.2.36"


# Security & JWT
jjwt = "0.12.6"

# Code Quality
sonarqube = "4.4.1.3373"
spotless = "6.25.0"

hibernate-spatial = "6.6.29.Final"
pgvector = "0.1.6"

# Redis
lettuce = "6.5.2.RELEASE"

[libraries]
# JWT
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# Swagger
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swagger-core" }
swagger-core-jakarta        = { module = "io.swagger.core.v3:swagger-core-jakarta",        version.ref = "swagger-core" }
swagger-models-jakarta      = { module = "io.swagger.core.v3:swagger-models-jakarta",      version.ref = "swagger-core" }

# Database
postgresql = { module = "org.postgresql:postgresql" }
h2 = { module = "com.h2database:h2" }

# Hibernate
hibernate-spatial = { module = "org.hibernate:hibernate-spatial", version.ref = "hibernate-spatial" }

# Spring Boot Starters
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-devtools = { module = "org.springframework.boot:spring-boot-devtools"}
spring-boot-starter-websocket = { module = "org.springframework.boot:spring-boot-starter-websocket" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator"}
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-doc" }

# Spring AI
spring-ai-bom = { module = "org.springframework.ai:spring-ai-bom", version.ref = "spring-ai-bom" }
spring-ai-openai = { module = "org.springframework.ai:spring-ai-openai", version.ref = "spring-ai-bom" }
spring-ai-pgvector-store = { module = "org.springframework.ai:spring-ai-starter-vector-store-pgvector", version.ref = "spring-ai-bom" }
spring-ai-chat-memory-repository-jdbc = { module = "org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc", version.ref = "spring-ai-bom" }
spring-ai-advisors-vector-store = { module = "org.springframework.ai:spring-ai-advisors-vector-store", version.ref = "spring-ai-bom" }
spring-ai-rag = { module = "org.springframework.ai:spring-ai-rag", version.ref = "spring-ai-bom" }

# Lombok
lombok = { module = "org.projectlombok:lombok"}

# Redis
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }

# Sonarqube
sonarqube-plugin = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonarqube" }

# Spotless
spotless-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

# Spring Security
spring-security-test = { module = "org.springframework.security:spring-security-test" }
[bundles]
jjwt = ["jjwt-api", "jjwt-impl", "jjwt-jackson"]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }